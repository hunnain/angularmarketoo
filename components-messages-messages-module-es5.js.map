{"version":3,"sources":["webpack:///src/app/components/messages/chat-box/chat-box.component.ts","webpack:///src/app/components/messages/chat-box/chat-box.component.html","webpack:///src/app/components/messages/list-message/list-message.component.ts","webpack:///src/app/components/messages/list-message/list-message.component.html","webpack:///src/app/components/messages/messages-routing.module.ts","webpack:///src/app/components/messages/messages.module.ts"],"names":["ChatBoxComponent","user","messages","sendMsg","selector","templateUrl","styleUrls","ListMessageComponent","selectedUser","openChatScreen","dummyMessages","user_id","message","console","log","openChat","routes","path","component","data","title","breadcrumb","MessagesRoutingModule","forChild","imports","exports","MessagesModule","declarations"],"mappings":"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","file":"components-messages-messages-module-es5.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chat-box',\r\n  templateUrl: './chat-box.component.html',\r\n  styleUrls: ['./chat-box.component.scss']\r\n})\r\nexport class ChatBoxComponent implements OnInit {\r\n\r\n  @Input() user: any = {}\r\n  @Input() messages: Array<object> = []\r\n\r\n  @Output() sendMsg = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div style=\"height: 100%;\">\r\n    <div class=\"row\"  style=\"height: 100%;\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"card chat-container\">\r\n                <div class=\"card-header\">\r\n                    <!-- <h5>{{user.name}}</h5> -->\r\n                    <ul class=\"list\">\r\n                        <li class=\"clearfix\">\r\n                            <img class=\"rounded-circle user-image blur-up lazyloaded\" [src]=\"user.img\" alt=\"\">\r\n                            <div class=\"status-circle online\"></div>\r\n                            <div class=\"about\">\r\n                                <div class=\"name\">{{user.name}}</div>\r\n                                <div class=\"status\"> {{user.status}}</div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"card-body content\">\r\n                    <ul>\r\n                        <li [ngClass]=\"{'right':msg.user_id == user.id}\" *ngFor=\"let msg of messages\">\r\n                            <span class=\"msg\">{{msg.message}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"action-footer\">\r\n                    <form class=\"needs-validation\">\r\n                        <div style=\"display: grid;grid-template-columns:1fr 9fr 1fr;margin-top: 5px;\">\r\n                            <div  class=\"icon-btn\">\r\n                                <span>\r\n                                    <app-feather-icons [icon]=\"'paperclip'\" class=\"font-primary\" style=\"color: #fff !important;\"></app-feather-icons>\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\" placeholder=\"Type here\">\r\n                            </div>\r\n                            <div  class=\"icon-btn\">\r\n                                <span>\r\n                                    <app-feather-icons [icon]=\"'send'\" class=\"font-primary\" style=\"color: #fff !important;\"></app-feather-icons>\r\n                                </span>\r\n                            </div> \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-list-message',\r\n  templateUrl: './list-message.component.html',\r\n  styleUrls: ['./list-message.component.scss']\r\n})\r\nexport class ListMessageComponent implements OnInit {\r\n\r\n  public selectedUser: any= {};\r\n  public openChatScreen: boolean = false;\r\n\r\n  public dummyMessages = [\r\n    {\r\n      user_id:1,\r\n      message:'hello there'\r\n    },\r\n    {\r\n      user_id:2,\r\n      message:'Hi, how are you?'\r\n    },\r\n    {\r\n      user_id:1,\r\n      message:\"I'm, how are you?\"\r\n    },\r\n    \r\n  ]\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  openChat(user){\r\n    this.openChatScreen = true;\r\n    console.log(\"user\",user)\r\n    this.selectedUser = user;\r\n  }\r\n\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-md-4\">\r\n            <div class=\"right-sidebar  chat-side-bar\">\r\n                <app-right-sidebar (selectUser)=\"openChat($event)\"></app-right-sidebar>\r\n            </div>\r\n        </div>\r\n        <div class=\"col12 col-md-8\">\r\n            <div class=\"no-chat-msg\" *ngIf=\"!openChatScreen\">\r\n                Click on user to start chat\r\n            </div>\r\n            <app-chat-box *ngIf=\"openChatScreen\" [user]=\"selectedUser\" [messages]=\"dummyMessages\"></app-chat-box>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListMessageComponent } from './list-message/list-message.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListMessageComponent,\r\n    data: {\r\n      title: \"All Messages\",\r\n      breadcrumb: \"Messages\"\r\n    }      \r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MessagesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\nimport { MessagesRoutingModule } from './messages-routing.module';\r\nimport { ListMessageComponent } from './list-message/list-message.component';\r\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [ListMessageComponent, ChatBoxComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MessagesRoutingModule,\r\n    NgxDatatableModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class MessagesModule { }\r\n"]}